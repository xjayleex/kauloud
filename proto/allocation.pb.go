// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.13.0
// source: allocation.proto

package proto

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type WorkloadType int32

const (
	WorkloadType_VirtualMachineType WorkloadType = 0
	WorkloadType_ContainerType      WorkloadType = 1
)

// Enum value maps for WorkloadType.
var (
	WorkloadType_name = map[int32]string{
		0: "VirtualMachineType",
		1: "ContainerType",
	}
	WorkloadType_value = map[string]int32{
		"VirtualMachineType": 0,
		"ContainerType":      1,
	}
)

func (x WorkloadType) Enum() *WorkloadType {
	p := new(WorkloadType)
	*p = x
	return p
}

func (x WorkloadType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WorkloadType) Descriptor() protoreflect.EnumDescriptor {
	return file_allocation_proto_enumTypes[0].Descriptor()
}

func (WorkloadType) Type() protoreflect.EnumType {
	return &file_allocation_proto_enumTypes[0]
}

func (x WorkloadType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use WorkloadType.Descriptor instead.
func (WorkloadType) EnumDescriptor() ([]byte, []int) {
	return file_allocation_proto_rawDescGZIP(), []int{0}
}

// As a user view,
type WorkloadInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type         WorkloadType `protobuf:"varint,1,opt,name=type,proto3,enum=proto.WorkloadType" json:"type,omitempty"`
	Userid       string       `protobuf:"bytes,2,opt,name=userid,proto3" json:"userid,omitempty"`
	Token        string       `protobuf:"bytes,3,opt,name=token,proto3" json:"token,omitempty"`
	WorkloadName string       `protobuf:"bytes,4,opt,name=workload_name,json=workloadName,proto3" json:"workload_name,omitempty"`
}

func (x *WorkloadInfo) Reset() {
	*x = WorkloadInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_allocation_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkloadInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkloadInfo) ProtoMessage() {}

func (x *WorkloadInfo) ProtoReflect() protoreflect.Message {
	mi := &file_allocation_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkloadInfo.ProtoReflect.Descriptor instead.
func (*WorkloadInfo) Descriptor() ([]byte, []int) {
	return file_allocation_proto_rawDescGZIP(), []int{0}
}

func (x *WorkloadInfo) GetType() WorkloadType {
	if x != nil {
		return x.Type
	}
	return WorkloadType_VirtualMachineType
}

func (x *WorkloadInfo) GetUserid() string {
	if x != nil {
		return x.Userid
	}
	return ""
}

func (x *WorkloadInfo) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *WorkloadInfo) GetWorkloadName() string {
	if x != nil {
		return x.WorkloadName
	}
	return ""
}

type AllocRequestDescription struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Todo :: think about the user_id extracted from. from raw request or reference vm's annotations?
	UserId string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Spec   *ContainerResourceSpec `protobuf:"bytes,2,opt,name=spec,proto3" json:"spec,omitempty"`
}

func (x *AllocRequestDescription) Reset() {
	*x = AllocRequestDescription{}
	if protoimpl.UnsafeEnabled {
		mi := &file_allocation_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AllocRequestDescription) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AllocRequestDescription) ProtoMessage() {}

func (x *AllocRequestDescription) ProtoReflect() protoreflect.Message {
	mi := &file_allocation_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AllocRequestDescription.ProtoReflect.Descriptor instead.
func (*AllocRequestDescription) Descriptor() ([]byte, []int) {
	return file_allocation_proto_rawDescGZIP(), []int{1}
}

func (x *AllocRequestDescription) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *AllocRequestDescription) GetSpec() *ContainerResourceSpec {
	if x != nil {
		return x.Spec
	}
	return nil
}

type ContainerResourceSpec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Resources   *Resources   `protobuf:"bytes,1,opt,name=resources,proto3" json:"resources,omitempty"`
	ImageCode   string       `protobuf:"bytes,2,opt,name=image_code,json=imageCode,proto3" json:"image_code,omitempty"`
	HostAliases []*HostAlias `protobuf:"bytes,3,rep,name=host_aliases,json=hostAliases,proto3" json:"host_aliases,omitempty"`
}

func (x *ContainerResourceSpec) Reset() {
	*x = ContainerResourceSpec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_allocation_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContainerResourceSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContainerResourceSpec) ProtoMessage() {}

func (x *ContainerResourceSpec) ProtoReflect() protoreflect.Message {
	mi := &file_allocation_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContainerResourceSpec.ProtoReflect.Descriptor instead.
func (*ContainerResourceSpec) Descriptor() ([]byte, []int) {
	return file_allocation_proto_rawDescGZIP(), []int{2}
}

func (x *ContainerResourceSpec) GetResources() *Resources {
	if x != nil {
		return x.Resources
	}
	return nil
}

func (x *ContainerResourceSpec) GetImageCode() string {
	if x != nil {
		return x.ImageCode
	}
	return ""
}

func (x *ContainerResourceSpec) GetHostAliases() []*HostAlias {
	if x != nil {
		return x.HostAliases
	}
	return nil
}

type Resources struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cpu       string `protobuf:"bytes,1,opt,name=cpu,proto3" json:"cpu,omitempty"`
	Memory    string `protobuf:"bytes,2,opt,name=memory,proto3" json:"memory,omitempty"`
	Ephemeral string `protobuf:"bytes,3,opt,name=ephemeral,proto3" json:"ephemeral,omitempty"` //
	Gpu       *Gpu   `protobuf:"bytes,4,opt,name=gpu,proto3" json:"gpu,omitempty"`
}

func (x *Resources) Reset() {
	*x = Resources{}
	if protoimpl.UnsafeEnabled {
		mi := &file_allocation_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Resources) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Resources) ProtoMessage() {}

func (x *Resources) ProtoReflect() protoreflect.Message {
	mi := &file_allocation_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Resources.ProtoReflect.Descriptor instead.
func (*Resources) Descriptor() ([]byte, []int) {
	return file_allocation_proto_rawDescGZIP(), []int{3}
}

func (x *Resources) GetCpu() string {
	if x != nil {
		return x.Cpu
	}
	return ""
}

func (x *Resources) GetMemory() string {
	if x != nil {
		return x.Memory
	}
	return ""
}

func (x *Resources) GetEphemeral() string {
	if x != nil {
		return x.Ephemeral
	}
	return ""
}

func (x *Resources) GetGpu() *Gpu {
	if x != nil {
		return x.Gpu
	}
	return nil
}

type Gpu struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Enabled    bool   `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
	DeviceName string `protobuf:"bytes,2,opt,name=device_name,json=deviceName,proto3" json:"device_name,omitempty"`
}

func (x *Gpu) Reset() {
	*x = Gpu{}
	if protoimpl.UnsafeEnabled {
		mi := &file_allocation_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Gpu) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Gpu) ProtoMessage() {}

func (x *Gpu) ProtoReflect() protoreflect.Message {
	mi := &file_allocation_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Gpu.ProtoReflect.Descriptor instead.
func (*Gpu) Descriptor() ([]byte, []int) {
	return file_allocation_proto_rawDescGZIP(), []int{4}
}

func (x *Gpu) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *Gpu) GetDeviceName() string {
	if x != nil {
		return x.DeviceName
	}
	return ""
}

type HostAlias struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IpAddress string   `protobuf:"bytes,1,opt,name=ip_address,json=ipAddress,proto3" json:"ip_address,omitempty"`
	HostNames []string `protobuf:"bytes,2,rep,name=host_names,json=hostNames,proto3" json:"host_names,omitempty"`
}

func (x *HostAlias) Reset() {
	*x = HostAlias{}
	if protoimpl.UnsafeEnabled {
		mi := &file_allocation_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HostAlias) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HostAlias) ProtoMessage() {}

func (x *HostAlias) ProtoReflect() protoreflect.Message {
	mi := &file_allocation_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HostAlias.ProtoReflect.Descriptor instead.
func (*HostAlias) Descriptor() ([]byte, []int) {
	return file_allocation_proto_rawDescGZIP(), []int{5}
}

func (x *HostAlias) GetIpAddress() string {
	if x != nil {
		return x.IpAddress
	}
	return ""
}

func (x *HostAlias) GetHostNames() []string {
	if x != nil {
		return x.HostNames
	}
	return nil
}

type Availability struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ok bool `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
}

func (x *Availability) Reset() {
	*x = Availability{}
	if protoimpl.UnsafeEnabled {
		mi := &file_allocation_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Availability) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Availability) ProtoMessage() {}

func (x *Availability) ProtoReflect() protoreflect.Message {
	mi := &file_allocation_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Availability.ProtoReflect.Descriptor instead.
func (*Availability) Descriptor() ([]byte, []int) {
	return file_allocation_proto_rawDescGZIP(), []int{6}
}

func (x *Availability) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

var File_allocation_proto protoreflect.FileDescriptor

var file_allocation_proto_rawDesc = []byte{
	0x0a, 0x10, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x8a, 0x01, 0x0a, 0x0c, 0x57, 0x6f,
	0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x27, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x12, 0x23, 0x0a, 0x0d, 0x77, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x77, 0x6f, 0x72, 0x6b, 0x6c, 0x6f,
	0x61, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x64, 0x0a, 0x17, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x30, 0x0a, 0x04, 0x73, 0x70,
	0x65, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x53, 0x70, 0x65, 0x63, 0x52, 0x04, 0x73, 0x70, 0x65, 0x63, 0x22, 0x9b, 0x01, 0x0a,
	0x15, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x53, 0x70, 0x65, 0x63, 0x12, 0x2e, 0x0a, 0x09, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x52, 0x09, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x6d, 0x61, 0x67,
	0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x33, 0x0a, 0x0c, 0x68, 0x6f, 0x73, 0x74, 0x5f, 0x61, 0x6c,
	0x69, 0x61, 0x73, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x48, 0x6f, 0x73, 0x74, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x52, 0x0b, 0x68,
	0x6f, 0x73, 0x74, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x65, 0x73, 0x22, 0x71, 0x0a, 0x09, 0x52, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x70, 0x75, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x63, 0x70, 0x75, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65, 0x6d,
	0x6f, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x65, 0x6d, 0x6f, 0x72,
	0x79, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x70, 0x68, 0x65, 0x6d, 0x65, 0x72, 0x61, 0x6c, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x65, 0x70, 0x68, 0x65, 0x6d, 0x65, 0x72, 0x61, 0x6c, 0x12,
	0x1c, 0x0a, 0x03, 0x67, 0x70, 0x75, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x70, 0x75, 0x52, 0x03, 0x67, 0x70, 0x75, 0x22, 0x40, 0x0a,
	0x03, 0x47, 0x70, 0x75, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x1f,
	0x0a, 0x0b, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22,
	0x49, 0x0a, 0x09, 0x48, 0x6f, 0x73, 0x74, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x12, 0x1d, 0x0a, 0x0a,
	0x69, 0x70, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x69, 0x70, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x68,
	0x6f, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x09, 0x68, 0x6f, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x22, 0x1e, 0x0a, 0x0c, 0x41, 0x76,
	0x61, 0x69, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x6b,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x02, 0x6f, 0x6b, 0x2a, 0x39, 0x0a, 0x0c, 0x57, 0x6f,
	0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x12, 0x56, 0x69,
	0x72, 0x74, 0x75, 0x61, 0x6c, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x54,
	0x79, 0x70, 0x65, 0x10, 0x01, 0x32, 0x56, 0x0a, 0x15, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x41, 0x64,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x3d,
	0x0a, 0x11, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x69, 0x6c,
	0x69, 0x74, 0x79, 0x12, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x57, 0x6f, 0x72, 0x6b,
	0x6c, 0x6f, 0x61, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_allocation_proto_rawDescOnce sync.Once
	file_allocation_proto_rawDescData = file_allocation_proto_rawDesc
)

func file_allocation_proto_rawDescGZIP() []byte {
	file_allocation_proto_rawDescOnce.Do(func() {
		file_allocation_proto_rawDescData = protoimpl.X.CompressGZIP(file_allocation_proto_rawDescData)
	})
	return file_allocation_proto_rawDescData
}

var file_allocation_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_allocation_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_allocation_proto_goTypes = []interface{}{
	(WorkloadType)(0),               // 0: proto.WorkloadType
	(*WorkloadInfo)(nil),            // 1: proto.WorkloadInfo
	(*AllocRequestDescription)(nil), // 2: proto.AllocRequestDescription
	(*ContainerResourceSpec)(nil),   // 3: proto.ContainerResourceSpec
	(*Resources)(nil),               // 4: proto.Resources
	(*Gpu)(nil),                     // 5: proto.Gpu
	(*HostAlias)(nil),               // 6: proto.HostAlias
	(*Availability)(nil),            // 7: proto.Availability
}
var file_allocation_proto_depIdxs = []int32{
	0, // 0: proto.WorkloadInfo.type:type_name -> proto.WorkloadType
	3, // 1: proto.AllocRequestDescription.spec:type_name -> proto.ContainerResourceSpec
	4, // 2: proto.ContainerResourceSpec.resources:type_name -> proto.Resources
	6, // 3: proto.ContainerResourceSpec.host_aliases:type_name -> proto.HostAlias
	5, // 4: proto.Resources.gpu:type_name -> proto.Gpu
	1, // 5: proto.AllocAdmissionService.CheckAvailability:input_type -> proto.WorkloadInfo
	7, // 6: proto.AllocAdmissionService.CheckAvailability:output_type -> proto.Availability
	6, // [6:7] is the sub-list for method output_type
	5, // [5:6] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_allocation_proto_init() }
func file_allocation_proto_init() {
	if File_allocation_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_allocation_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorkloadInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_allocation_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AllocRequestDescription); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_allocation_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContainerResourceSpec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_allocation_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Resources); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_allocation_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Gpu); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_allocation_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HostAlias); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_allocation_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Availability); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_allocation_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_allocation_proto_goTypes,
		DependencyIndexes: file_allocation_proto_depIdxs,
		EnumInfos:         file_allocation_proto_enumTypes,
		MessageInfos:      file_allocation_proto_msgTypes,
	}.Build()
	File_allocation_proto = out.File
	file_allocation_proto_rawDesc = nil
	file_allocation_proto_goTypes = nil
	file_allocation_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// AllocAdmissionServiceClient is the client API for AllocAdmissionService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AllocAdmissionServiceClient interface {
	CheckAvailability(ctx context.Context, in *WorkloadInfo, opts ...grpc.CallOption) (*Availability, error)
}

type allocAdmissionServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewAllocAdmissionServiceClient(cc grpc.ClientConnInterface) AllocAdmissionServiceClient {
	return &allocAdmissionServiceClient{cc}
}

func (c *allocAdmissionServiceClient) CheckAvailability(ctx context.Context, in *WorkloadInfo, opts ...grpc.CallOption) (*Availability, error) {
	out := new(Availability)
	err := c.cc.Invoke(ctx, "/proto.AllocAdmissionService/CheckAvailability", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AllocAdmissionServiceServer is the server API for AllocAdmissionService service.
type AllocAdmissionServiceServer interface {
	CheckAvailability(context.Context, *WorkloadInfo) (*Availability, error)
}

// UnimplementedAllocAdmissionServiceServer can be embedded to have forward compatible implementations.
type UnimplementedAllocAdmissionServiceServer struct {
}

func (*UnimplementedAllocAdmissionServiceServer) CheckAvailability(context.Context, *WorkloadInfo) (*Availability, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CheckAvailability not implemented")
}

func RegisterAllocAdmissionServiceServer(s *grpc.Server, srv AllocAdmissionServiceServer) {
	s.RegisterService(&_AllocAdmissionService_serviceDesc, srv)
}

func _AllocAdmissionService_CheckAvailability_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WorkloadInfo)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AllocAdmissionServiceServer).CheckAvailability(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.AllocAdmissionService/CheckAvailability",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AllocAdmissionServiceServer).CheckAvailability(ctx, req.(*WorkloadInfo))
	}
	return interceptor(ctx, in, info, handler)
}

var _AllocAdmissionService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.AllocAdmissionService",
	HandlerType: (*AllocAdmissionServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CheckAvailability",
			Handler:    _AllocAdmissionService_CheckAvailability_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "allocation.proto",
}
